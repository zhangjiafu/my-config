#日志文件目录
logging.config=classpath:config/logback-spring.xml

#服务租约更新间隔
eureka.instance.leaseRenewalIntervalInSeconds=5
#服务租约失效时间
eureka.instance.leaseExpirationDurationInSeconds=8
#向注册中心获取服务列表间隔
eureka.client.registryFetchIntervalSeconds=5
eureka.client.initialInstanceInfoReplicationIntervalSeconds= 3
eureka.client.instanceInfoReplicationIntervalSeconds= 5

#数据库配置
spring.datasource.url=jdbc:mysql://cashierinternet.mysql.rds.aliyuncs.com:3306/cashierdb?useUnicode=true&amp;characterEncoding=UTF-8
spring.datasource.username=woc
spring.datasource.password=Woc_Cashierdb_123
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.jpa.show-sql=true

spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=100
spring.datasource.maxActive=300
spring.datasource.minIdle=100
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=50
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true
 
#链路跟踪,kafka配置，集群用,号分隔
#spring.cloud.stream.kafka.binder.brokers=10.0.0.11:9092
#链路跟踪，kafka的注册中心配置，集群用,号分隔
#spring.cloud.stream.kafka.binder.zk-nodes=10.0.0.10:2181

#使用Apache HttpClient替换Feign原生httpclient
feign.httpclient.enabled=true

#设置feign超时时间
hystrix.command.default.execution.timeout.enabled= true
#在调用方配置，被该调用方的所有方法的超时时间都是该值，优先级低于下边的指定配置
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=30000
#在调用方配置，被该调用方的指定方法（HystrixCommandKey方法名）的超时时间是该值
hystrix.command.HystrixCommandKey.execution.isolation.thread.timeoutInMilliseconds=30000
#线程池核心线程数 默认为10
hystrix.threadpool.default.coreSize=100
#Queue （最大排队长度。默认-1，使用SynchronousQueue。其他值则使用 LinkedBlockingQueue。如果要从-1换成其他值则需重启，即该值不能动态调整，若要动态调整，需要使用到下边这个配置）
hystrix.threadpool.default.maxQueueSize=10 
#Queue （排队线程数量阈值，默认为5，达到时拒绝，如果配置了该选项，队列的大小是该队列） 如果maxQueueSize=-1的话，则该选项不起作用
hystrix.threadpool.default.queueSizeRejectionThreshold =100

#启用断路器
feign.hystrix.enabled=true
#断路器 （当在配置时间窗口内达到此数量的失败后，进行短路。默认20个）
hystrix.command.default.circuitBreaker.requestVolumeThreshold=20
#断路器 （短路多久以后开始尝试是否恢复，默认5s）
hystrix.command.default.circuitBreaker.sleepWindowInMilliseconds=5000
#断路器 （出错百分比阈值，当达到此阈值后，开始短路。默认50%）
hystrix.command.default.circuitBreaker.errorThresholdPercentage=50%
#断路器 fallback （调用线程允许请求HystrixCommand.GetFallback()的最大数量，默认10。超出时将会有异常抛出，注意：该项配置对于THREAD隔离模式也起作用）
hystrix.command.default.fallback.isolation.semaphore.maxConcurrentRequests=10
#重试机机制
ribbon.ReadTimeout= 60000
ribbon.ConnectTimeout= 60000
ribbon.MaxAutoRetries= 0
ribbon.MaxAutoRetriesNextServer= 0

#请求和响应GZIP压缩支持
feign.compression.request.enabled=true
feign.compression.response.enabled=true
#支持压缩的mime types
feign.compression.request.mime-types=text/xml,application/xml,application/json
feign.compression.request.min-request-size=2048

#swagger配置开关
linkfin.active.swagger=true
#热加载
spring.devtools.livereload.enabled=false

#######################业务相关配置开始##########################
#########消息中心服务相关信息开始############
#消息中心服务名
message.applicationName=linkfin-message
message.sendEmailUrl=message/send/email/mailId
#预警邮件Id
message.email.alarmMailId=sysAlarmMailId
#########消息中心服务相关信息结束############

############配置定时任务每次取的订单条数###########
remit.task.limit=10
###############银行路由URL配置##################
bankroute.applicationName=eac-bank-route
#购汇汇率查询url
bankroute.tradeRemit.remitRateUrl=/bank/tradeRemit/queryBankNoteRate
#购汇查询交易状态url
bankroute.tradeRemit.transStatusUrl=/bank/tradeRemit/queryTransStatus
#购汇发送订单信息url
bankroute.tradeRemit.postOrderUrl=/bank/tradeRemit/postOrderInfo
#购汇发送结算信息url
bankroute.tradeRemit.postPayInfoUrl=/bank/tradeRemit/postPayInfo
#购汇发送物流信息url
bankroute.tradeRemit.postLogisticsUrl=/bank/tradeRemit/postLogisticsInfo
#购汇发送转账指令url
bankroute.tradeRemit.submitRemitUrl=/bank/tradeRemit/submitRemit

###############购汇校验配置##################
#执行汇率浮动比例
trade.remit.rate.float=0.05


#返回信息(测试)
return.msg=zhang jia fu ni hao
